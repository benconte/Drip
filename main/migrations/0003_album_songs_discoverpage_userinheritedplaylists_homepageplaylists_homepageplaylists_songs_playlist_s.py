# Generated by Django 3.2.8 on 2021-10-30 17:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('main', '0002_userartists'),
    ]

    operations = [
        migrations.CreateModel(
            name='HomePagePlaylists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('inspired', models.CharField(max_length=300, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('playlist_img', models.ImageField(default='default.jpg', upload_to='playlist_images')),
            ],
        ),
        migrations.CreateModel(
            name='Playlists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('inspired', models.CharField(max_length=300, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('playlist_img', models.ImageField(default='playlist_icon.jpg', upload_to='playlist_images')),
                ('favorite', models.ManyToManyField(blank=True, related_name='playlist_favorite', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='playlist_name', to=settings.AUTH_USER_MODEL)),
                ('playlist_author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='playlist_author', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_playlists', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPlaylists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('playlist_img', models.ImageField(default='playlist_icon.jpg', upload_to='user_playlist_images')),
                ('favorite', models.ManyToManyField(blank=True, related_name='user_playlist_favorite', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='user_playlist_name', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_created_playlists', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPlaylists_songs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userplaylists', to='main.userplaylists')),
                ('song_model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_playlist_songs', to='main.song_model')),
            ],
        ),
        migrations.CreateModel(
            name='UserInheritedPlaylists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userInheritedPlaylists', to='main.playlists')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userInherited', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Playlist_songs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='playlist', to='main.playlists')),
                ('song_model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='playlist_songs', to='main.song_model')),
            ],
        ),
        migrations.CreateModel(
            name='HomePagePlaylists_songs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='homepageplaylist', to='main.homepageplaylists')),
                ('song_model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='home_page_playlist_songs', to='main.song_model')),
            ],
        ),
        migrations.CreateModel(
            name='DiscoverPage_UserInheritedPlaylists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discover_userInheritedPlaylists', to='main.homepageplaylists')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discover_userInherited', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Album_songs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('album', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='album', to='main.albums')),
                ('song_model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='album_songs', to='main.song_model')),
            ],
        ),
    ]
